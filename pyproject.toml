[project]
name = "winloop"
description = "Windows version of uvloop"
authors = [{name = "Vizonex", email="VizonexBusiness@gmail.com"}]
requires-python = '>=3.9.0'
readme = "README.md"
license = {text = "MIT License"}
dynamic = ["version"]
keywords = [
    "asyncio",
    "networking",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: System :: Networking",
]

[project.urls]
github = "https://github.com/Vizonex/Winloop"

# TODO: We really need to get dependabot in a future update moving versions ourselves is annoying...

[project.optional-dependencies]
test = [
    # pycodestyle is a dependency of flake8, but it must be frozen because
    # their combination breaks too often
    # (example breakage: https://gitlab.com/pycqa/flake8/issues/427)
    'aiohttp>=3.10.5',
    'flake8>=5,<8',
    'psutil',
    'pycodestyle>=2.9,<2.15',
    'pyOpenSSL>=23.0,<25.2',
    'mypy>=0.800',
]
dev = [
    'setuptools>=60',
    'Cython==3.1.2',
]
docs = [
    'Sphinx>=4.1.2,<7.5.0',
    'sphinxcontrib-asyncio~=0.3.0',
    'sphinx_rtd_theme>=0.5.2,<3.1.0',
]

[build-system]
requires = [
    "setuptools>=60",
    "wheel",
    "Cython==3.1.2",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
zip-safe = false
packages = ["winloop"]

[tool.setuptools.exclude-package-data]
"*" = ["*.c", "*.h"]

[tool.cibuildwheel]
build-frontend = "build"
#test-extras = "test"
#test-command = "python -m unittest discover -v {project}/tests"

[tool.pytest.ini_options]
addopts = "--capture=no --assert=plain --strict-markers --tb=native --import-mode=importlib"
testpaths = "tests"
filterwarnings = "default"
